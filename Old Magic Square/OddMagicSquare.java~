
/**
 * This class generates a magic square base on the input of odd
 * numbers by the user
 * 
 * @author Duong H Chau
 * @version HW1 - CSC 143
 */
public class OddMagicSquare {
  //instance variables
  private int size;              //the size of the square array
  public int[][] mSquare;       //the array 
  
  public OddMagicSquare(int n){
    if(n < 0){
      throw new IllegalArgumentException();
    }
    if(n % 2 == 0){
      throw new IllegalArgumentException();
    }
    size = n;
    mSquare =  new int[n][n];
    buildSquare(mSquare, size);
  }
  /**
   * a private helper method that build the magic square
   * @param square the square array
   * @param size the size of the array
   */ 
  private void buildSquare(int[][] square, int size){
    //the starting point
    int n = size - 1;
    int m = (size - 1) / 2;
    square[n][m] = 1;
    
    for (int ii = 2; ii <= size*size; ii++){
      int nHolder = n;
      int mHolder = m;
      n = n + 1;
      m = m + 1;
      
      if(n > size - 1){
        n = n - size;
      }
      if( m > size - 1){
        m = m - size;
      }
      
      if(square[n][m] == 0){
        square[n][m] = ii;
      }
      else{
        n = nHolder - 1;
        m = mHolder;
        square[n][m] = ii;
      }
    }
  }
  /**
   * the static method that check if an array is Magic or not
   * @param a an int type double array
   * @return a boolean type true/false
   */ 
  public static boolean isMagic(int[][] a){
    if(a == null) return false;
    
    if(a.length % 2 == 0) return false;
    
    
    for(int ii = 1; ii <= a.length*a.length; ii++){
      for(int i = 0; i < a.length; i++){
        for(int k = 0; k < a[i].length; k++){
          
        }
      }
    }
    
    for(int i = 0; i < a.length; i++){
      int width = 0;
      for(int k = 0; k < a[i].length; k++){
        width ++;
      }
      if(width != a.length) return false;
    }
    
   
  return true;  
  }
  /**
   * a toString method that shows the String representation 
   * of this MagicSquare
   * @return this String 
   */
  public String toString(){
    String display = "";
    for (int j = 0; j < size; j++){
      for (int k = 0; k < size; k++){
        display += " " + Integer.toString(mSquare[k][j]);
      }
      display += "\n";
    }
    return display;
  }
  /**
   *
   * @param args
   */
  public static void main(String[] args){
    OddMagicSquare s = new OddMagicSquare(7);
    String str = s.toString();
    System.out.println(str);
    boolean tf = isMagic(s.mSquare);
    System.out.println(tf);
  }
}